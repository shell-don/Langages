#!/usr/bin/env python3# -*- coding: utf-8 -*-"""Author : MathisCorrection des Travaux Pratiques :     TP 16 _ variables aléatoires discrètes usuelles"""import numpy as npimport numpy.random as rdimport matplotlib.pyplot as plt# Exercice 1# 1)def simulX1():    k = 0     while True:        k += 1         D = rd.binomial(1, 1/6)        if D == 1 :              return k            def simulX2():    k = 0     D = 0    while True:        k += 1         D += rd.binomial(1, 1/6)        if D == 2 :              return k            def simulX(n):        k = 0         D = 0        while True:            k += 1             D += rd.binomial(1, 1/6)            if D == n :                  return k            # 2)# On admet que si n 10000, la probabilité de [Xn = 10000] est presque 1.X = rd.randint(1,7,10000)position_6 = np.where(X==6)[0]def simulX_v2(n) :    """     Pour n un entier naturel non nul    """    return int(position_6[n-1])# 3)def simulX_v3(n) :    """     Renvoie une matrice dont le premier élément représente le numéro du lancer     du premier six, puis du deuxième... jusqu'au n-ème.    """    return rd.geometric(1/6, size=n)# Exercice 3# 1)def D(n):    return 2 * np.random.randint(0, 2, n) - 1