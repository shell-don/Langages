#!/usr/bin/env python3# -*- coding: utf-8 -*-"""Author : Mathis PigassouCorrection des Travaux Pratiques :     TP 3 _ boucles while et listes"""# Exercie 1def somme(n: int) -> int :    '''    Renvoie la somme des carrés des n premiers entiers.    '''    return(n*(n+1)*(2*n+1)/6)def depasse(M: int) -> int :    '''    Renvoie le plus petit entier n tel que la somme des carre dépasse M.    '''    n = 0    while somme(n) < M:        n += 1    return n # Exercie 2# Le premier digramme de flux permet de calculer le reste de la division euclidienne de a par b.def reste(a: int, b: int) -> any :    '''    Reste de la division euclidienne de a par b.    '''    if b == 0:        return "Erreur : division par 0"    elif a < b :        return a     else :        return reste(a-b, b)# Le deuxième diagramme de flux représente l'algorithme d'euclide (PGCD)def euclide(a: int, b: int) -> any :    '''    Algorithme d'Euclide.    '''    if b == 0 :        return "Erreur : division par 0"    elif a >= b :        r = reste(a,b)        if r == 0 :            return b         else :            return euclide(b,r)def euclide2(a: int, b: int) -> any :    if (b != 0) and (a >= b) and (reste(a,b) == 0):        return b    else :        return euclide2(b, reste(a,b))        def test() -> None :        # Exercice 1    print(somme(23))    print(depasse(123456789))        # Exercice 2    print(reste(4,2))    print(reste(100,2))    print(euclide(70, 7))        